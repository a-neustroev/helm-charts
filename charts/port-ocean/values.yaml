nameOverride: ""
fullnameOverride: ""

port:
  clientId: ""
  clientSecret: ""
  baseUrl: https://api.getport.io

podAnnotations: {}

extraEnv:
# Example
#   - name: HTTPS_PROXY
#     value: http://myproxy.com

podSecurityContext: {}
# Example 
  # runAsGroup: 1001
  # runAsUser: 1001
  # fsGroup: 1001
  # fsGroupChangePolicy: "OnRootMismatch"
containerSecurityContext: {}
# Example 
  # runAsGroup: 1001
  # runAsUser: 1001
  # allowPrivilegeEscalation: false

rolloutStrategy: "Recreate"

resources: 
  requests:
    memory: "512Mi"
    cpu: "200m"
  limits:
    memory: "1024Mi"
    cpu: "500m"


nodeSelector: {}

tolerations: []

affinity: {}

imagePullPolicy: Always

initializePortResources: true

scheduledResyncInterval: null

clientTimeout: null

secret:
  name: ""
  useExistingSecret: false

service:
  enabled: true
  type: ClusterIP
  port: 8000
  
ingress:
  enabled: false
  className: ""
  annotations: {}
  host: null
  path: /
  pathType: Prefix
  tls: []
  # Example
  #   - secretName: my-secret
  #     hosts:
  #       - "my-host.my-domain.com"
  
integration:
  identifier: ""
  version: ""
  type: ""
  config: {}
  secrets: {}
  eventListener:
    type: "KAFKA"
    brokers: "b-1-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196,b-2-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196,b-3-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196"

selfSignedCertificate:
  enabled: false
  certificate: ""